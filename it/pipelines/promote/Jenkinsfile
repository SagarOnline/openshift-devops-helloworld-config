pipeline {
    agent none

    stages {

        stage('Create Project') {
            agent{
                docker{
                    image 'openshift/origin-cli'
                    label 'docker-agent'
                }
            }
            steps {
                script{
                    sh 'ls -lrst'

                    def props = readProperties  file: 'application.properties'
                    

                    // Login to OpenShift Cluster
                    //TODO : Credentials are currently hardcoded for Demo, these should be parameterized
                    sh "oc login $props.OPENSHIFT_CLUSTER_URL -u developer -p developer  --insecure-skip-tls-verify"

                    def devProjectName = "$props.APP_NAME-$props.RELEASE_NAME-dev"
                    echo "Promoting  application '$devProjectName' in DEV environment to IT"
                    sh "oc get project > projects.txt"

                    // check if project is already available in DEV environment
                    if (!readFile("projects.txt").contains(devProjectName)){
                        
                        error("Project : '$devProjectName' is not avialable in DEV environment. Nothing to promote !")
                        //Create Project for Application in Dev environment
                        //sh "oc new-project $props.APP_NAME-$props.RELEASE_NAME-dev"
                    }else {
                        // create project in IT environment if it does not exists
                        def itProjectName = "$props.APP_NAME-$props.RELEASE_NAME-it"
                        if (!readFile("projects.txt").contains(itProjectName)){
                            sh "oc new-project $itProjectName"
                        }else{
                            //switch to existing project
                            echo "Project '$itProjectName' is already available in IT environment"
                        }
                        
                    }
                }
            }
        }

        stage('Promote Deployment') {
            agent{
                docker{
                    image 'openshift/origin-cli'
                    label 'docker-agent'
                }
            }
            steps {
                script{

                    def props = readProperties  file: 'application.properties'
                    
                    // Login to OpenShift Cluster
                    //TODO : Credentials are currently hardcoded for Demo, these should be parameterized
                    sh "oc login $props.OPENSHIFT_CLUSTER_URL -u developer -p developer  --insecure-skip-tls-verify"

                    def devProjectName = "$props.APP_NAME-$props.RELEASE_NAME-dev"
                    def itProjectName = "$props.APP_NAME-$props.RELEASE_NAME-it"

                    //Export objects from DEV environment
                    sh "oc project $devProjectName"

                    sh "oc get dc,svc,route,is -o=yaml  --export -l app=$props.APP_NAME,release=$props.RELEASE_NAME,environment=dev >state.yaml"

                    sh "sed -i 's/namespace:.*//g' state.yaml" // remove old namespace references
                    sh "sed -i 's/clusterIP:.*//g' state.yaml" // remove old clusterIP reference
                    sh "sed -i 's/host:.*//g' state.yaml" // remove old clusterIP reference
                    
                    //remove annotations
                    sh "sed -i 's/annotations:*//g' state.yaml"
                    sh "sed -i 's/.*last-applied-configuration.*//g' state.yaml"
                    sh "sed -i 's/.*{\".*}//g' state.yaml"
                    sh "sed -i 's/.*host.generated.*//g' state.yaml"
                    
                    //Copy  exported objects to IT environment
                    sh "oc project $itProjectName"

                    sh "cat state.yaml"
                    // Apply Resource object configuration changes
                    
                    sh 'oc apply -f state.yaml'
                }
            }
        }

        stage('Promote Tag') {
            agent{
                docker{
                    image 'openshift/origin-cli'
                    label 'docker-agent'
                }
            }
            steps {
                script{

                    def props = readProperties  file: 'application.properties'
                    
                    // Login to OpenShift Cluster
                    //TODO : Credentials are currently hardcoded for Demo, these should be parameterized
                    sh "oc login $props.OPENSHIFT_CLUSTER_URL -u developer -p developer  --insecure-skip-tls-verify"

                    def devProjectName = "$props.APP_NAME-$props.RELEASE_NAME-dev"
                    def itProjectName = "$props.APP_NAME-$props.RELEASE_NAME-it"

                    def devImageStreamTag = "$devProjectName/$props.APP_NAME:$props.RELEASE_NAME"
                    def itImageStreamTag = "$itProjectName/$props.APP_NAME:$props.RELEASE_NAME"
                    //switch to project in IT environment
                    sh "oc project $itProjectName"

                    sh "oc tag $devImageStreamTag $itImageStreamTag"

                }
            }
        }
    }
}