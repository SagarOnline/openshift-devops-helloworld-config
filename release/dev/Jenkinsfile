try {
    timeout(time: 20, unit: 'MINUTES') {
        
        node('nodejs') {
            stage('Checkout') {
                echo 'Checkout Application Config Repo'
                git(url:"${APP_CONFIG_GIT_REPO}"
                        , branch:'master')
                //stash 'workspace'
            }
            stage('Rollout') {
                openshift.withCluster() {
                    openshift.withProject() {
                        echo 'Creating Rollout Resources in Dev environment'
                        //unstash 'workspace'
                        sh 'ls -lrst'
                        def deploymentConfig = openshift.selector("dc", '"${APP_NAME}"-"${RELEASE_NAME}"-"${DEV_ENV_NAME}"-dc')
                        if(!deploymentConfig.exists()){
                            openshift.create( openshift.process("-f=release/dev/rollout-template.yaml", 
                                                "--param-file=release/release.properties",
                                                "--param-file=application.properties",
                                                "--ignore-unknown-parameters=true"
                                                ))
                        }
                                            
                        
                    }
                }
            }
        }
    }
} catch (err) {
    echo "in catch block"
    echo "Caught: ${err}"
    currentBuild.result = 'FAILURE'
    throw err
}          