apiVersion: v1
kind: Template
labels:
  template: rollout-template
message: |-
  This template creates the Openshift\Kubernetes Resources to rollout the application.  
metadata:
  annotations:
    openshift.io/display-name: Rollout Template
    description: |-
      This template creates below Openshift\Kubernetes Resources to rollout the application 
      1. TODOs : update description as more features are added into this template.
  name: rollout-template
parameters:
- description: The name of the application to which this template belongs. It should not have any whitespaces. for e.g. marketdata, accounts, etc.
  displayName: Application Name
  name: APP_NAME
  required: true
- description: The release name of the application. for e.g. v1, v2, apple, banana, cherry , etc
  displayName: Release Name
  name: RELEASE_NAME
  required: true
- description: Constant to use for Dev Environment 
  displayName: Dev environment name
  name: DEV_ENV_NAME
  required: true
  value: dev
- description: External Docker registry to fetch application image from. 
  displayName: External docker image registry
  name: DOCKER_REGISTRY
  required: true
- description: Port on which application should start. 
  displayName: application port
  name: CONTAINER_PORT
  required: true
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
      release: ${APP_NAME}-${RELEASE_NAME}-${DEV_ENV_NAME}
      environment: ${DEV_ENV_NAME}
    name: ${APP_NAME}-${RELEASE_NAME}-${DEV_ENV_NAME}-dc
  spec:
    replicas: 2
    selector:
      release: ${APP_NAME}-${RELEASE_NAME}-${DEV_ENV_NAME}
    template:
      metadata:
        labels:
          release: ${APP_NAME}-${RELEASE_NAME}-${DEV_ENV_NAME}
      spec:
        containers:
          - image: ${DOCKER_REGISTRY}/${APP_NAME}:${RELEASE_NAME}
            imagePullPolicy: IfNotPresent
            resources: {}
            name: ${APP_NAME}
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - ${APP_NAME}
          from:
            kind: ImageStreamTag
            name: '${APP_NAME}:${RELEASE_NAME}'
        type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: '2019-07-22T04:33:00Z'
    labels:
      app: ${APP_NAME}
      release: ${APP_NAME}-${RELEASE_NAME}-${DEV_ENV_NAME}
      environment: ${DEV_ENV_NAME}
    name: ${APP_NAME}-${RELEASE_NAME}-${DEV_ENV_NAME}-svc
  spec:
    ports:
      - port: 80
        protocol: TCP
        targetPort: ${{CONTAINER_PORT}}
    selector:
      release: ${APP_NAME}-${RELEASE_NAME}-${DEV_ENV_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APP_NAME}
      release: ${APP_NAME}-${RELEASE_NAME}-${DEV_ENV_NAME}
      environment: ${DEV_ENV_NAME}
    name: ${APP_NAME}-${RELEASE_NAME}-${DEV_ENV_NAME}-route
  spec:
    to:
      kind: Service
      name: ${APP_NAME}-${RELEASE_NAME}-${DEV_ENV_NAME}-svc
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    lookupPolicy:
      local: false
    tags:
      - name: ${RELEASE_NAME}
        from:
          kind: DockerImage
          name: ${DOCKER_REGISTRY}/${APP_NAME}:${RELEASE_NAME}